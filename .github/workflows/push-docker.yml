name: Image Build and Test

on:
  push:
    branches:
      - "**"
    tags:
      - "*.*.*"
  pull_request:

env:
  IMAGE_NAME: tdmproject/enviroplus_ingestor
  IMAGE_TAG: ${{ github.run_number }}

jobs:
  test_and_push:
    name: "Build, test and push Docker image"
    runs-on: ubuntu-20.04
    needs: []
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # - name: Fetch tdmq-polystore
      #   run: |
      #     wget -O docker/docker-compose.base.yml https://raw.githubusercontent.com/tdm-project/tdm-polystore/develop/docker/docker-compose.base.yml
      #     wget -O docker/settings.conf https://raw.githubusercontent.com/tdm-project/tdm-polystore/develop/docker/settings.conf

      # - name: Pull tdm-polystore
      #   run: |
      #     docker-compose -f docker/docker-compose.base.yml pull

      # - name: Start tdm-polystore
      #   run: |
      #     docker-compose -f docker/docker-compose.base.yml up -d
      #     # wait for the services to become healthy
      #     for i in {1..30}; do
      #       wget -O /dev/null http://localhost:8000/api/v0.0/entity_types && break
      #       echo "Waiting for TDMq to become ready..."
      #       sleep 1
      #     done

      # - name: Test
      #   run: |
      #     # Gets TDMQ_AUTH_TOKEN from env file
      #     docker run --rm --network docker_tdmq ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
      #       --log-level DEBUG temperature \
      #       "http://web:8000/api/v0.0/" "$(sed -n -e '/TDMQ_AUTH_TOKEN/s/.*=//p' docker/settings.conf)"  ingest --strictly-after $(date -d '2 hour ago' --iso-8601=minutes --utc)

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
